// Functions
// ----------------------------------------------------------------------------
@function relative-unit($number) {
  @return unit($number) == "%" or unit($number) == "em" or unit($number) == "rem"
}

@function absolute-unit($number) {
  @return not (relative-unit($number) or unitless($number));
}

/*

Rhythm

Calculate rhythm units. [Vertical Rhythm](http://compass-style.org/reference/compass/typography/vertical_rhythm/).

    rhythm(<$lines> [, <$font-size>, <$offset>])

* `$lines`: Number of lines
* `$font-size`: Context font size (default: $base-font-size) 
* `$offset`: Offset value (default: 0) 


    .item { height: rhythm(4); }

Styleguide 27.6

*/

@function rhythm(
  $lines: 1,
  $font-size: $base-font-size,
  $offset: 0
  ) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to the rhythm function";
  }
  $rhythm: $font-unit * ($lines * $base-line-height - $offset) / $font-size;

  @if unit($rhythm) == px {
    $rhythm: floor($rhythm);
  }
  @return $rhythm;
}

@function lines-for-font-size($font-size) {
  $lines: if($round-to-nearest-half-line,
    ceil(2 * $font-size / $base-line-height) / 2,
    ceil($font-size / $base-line-height));
  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {
    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
  }
  @return $lines;
}

// Warn
// ----------------------------------------------------------------------------
@if $relative-font-sizing and not relative-unit($font-unit) {
  @warn "$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.";
}

/*

Adjust font size to

Adjust a block to have a different font size and line height to maintain the 
rhythm. Taken from [Vertical Rhythm](http://compass-style.org/reference/compass/typography/vertical_rhythm/).

    @include adjust-font-size-to(<$to-size> [, <$lines: lines-for-font-size($to-size)>, <$from-size: $base-font-size> ])

* `$to-size`: Target size
* `$lines`:  $lines specifies how many multiples of the baseline rhythm each line of this font should use up
* `$from-size`: Use $from-size to adjust from a font-size other than the base font-size.

Styleguide 26.19

*/

@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {
  @if not $relative-font-sizing and $from-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to";
  }
  font-size: $font-unit * $to-size / $from-size;
  @include adjust-leading-to($lines, if($relative-font-sizing, $to-size, $base-font-size));
}

@mixin adjust-leading-to($lines, $font-size: $base-font-size) {
  line-height: rhythm($lines, $font-size);
}
