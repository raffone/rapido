/*

Functions

For 99% of the framework I used Bourbon' and Neat's functions but I've made some for covering edge cases.

Styleguide 27

*/

/*

Em

To convert `PX` to `EM` using the `$base-font-size` as font size.

    em(<$value> [, <$context>])

* `$value`: The value to convert
* `$context`: The context. (default: $base-font-size).

Styleguide 27.1


/*

Neg

Convert a value to negative.

    neg(<$value>)

* `$value`: The value to convert

Styleguide 27.2

*/

@function neg($n) {
    @return (0 - $n);
}



// Failbacks Susy One
// ----------------------------------------------------------------------------

@function columns-width(
  $columns  : $grid-columns
) {
  @return ($columns * $column) + (if($columns >= 1, ceil($columns - 1), 0) * $gutter);
}

@function relative-width(
  $width,
  $context : $grid-columns
) {
  @return percentage($width / columns-width($context));
}


/*

Columns

Similar to span-columns mixin, but returns the math-ready % multiplier. Taken from [Susy One](http://susydocs.oddbird.net/en/latest/susyone/#functions).

    columns(<$columns> [, <$context>, <$style>])

* `$columns`: The number of columns to span.
* `$context`: The Context. (default: $total-columns).
* `$style`: Optionally return static lengths for grid calculations. (default: $container-style).


    .item { width: columns(3,6); }

Styleguide 27.3

*/


@function column(
  $context  : $grid-columns
) {
  @return relative-width($column, $context);
}

@function columns(
  $columns,
  $context  : $grid-columns
) {
  @return relative-width(columns-width($columns), $context);
}

/*

Gutter

The % width of one gutter in any given context. Taken from [Susy One](http://susydocs.oddbird.net/en/latest/susyone/#functions).

    gutter([<$context>, <$style>])

* `$context`: The Context. (default: $total-columns).
* `$style`: Optionally return static lengths for grid calculations. (default: $container-style).


    .item { margin-right: gutter(6) + columns(3,6); }

Styleguide 27.4

*/

@function gutter(
  $context  : $grid-columns
) {
  @return relative-width($gutter, $context);
}

/*

Space

Total % space taken by Columns, including internal AND external gutters. Taken from [Susy One](http://susydocs.oddbird.net/en/latest/susyone/#functions).

    space(<$columns> [, <$context>, <$style>])

* `$columns`: The number of Columns to span,
* `$context`: The Context. (default: $total-columns).
* `$style`: Optionally return static lengths for grid calculations. (default: $container-style).


    .item { margin-right: space(3,6); }

Styleguide 27.5

*/

@function space(
  $columns,
  $context  : $grid-columns
) {
  @return columns($columns, $context) + if($columns >= 1, gutter($context), 0);
}

// Failbacks Compass
// ----------------------------------------------------------------------------


@function s-sprite-height($n) {
  @warn "This function is not available anymore";
}

@function s-sprite-width($n) {
  @warn "This function is not available anymore";
}

